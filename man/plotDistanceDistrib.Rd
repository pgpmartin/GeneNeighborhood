% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotDistanceDistrib.R
\name{plotDistanceDistrib}
\alias{plotDistanceDistrib}
\title{plot the distribution of intergenic distances}
\usage{
plotDistanceDistrib(
  distdf,
  groupcolumn = "GeneSet",
  type = c("ridge", "violin", "jitterbox"),
  genesetcols = NULL,
  newlabs = NULL
)
}
\arguments{
\item{distdf}{A data frame or tibble containing distances for different sets
of genes (ideally defined in a "GeneSet" column)}

\item{groupcolumn}{A character string with the name of the column containing
the description of the gene sets}

\item{type}{A character string in \code{c("ridge", "violin", "jitterbox")}
indicating the type of plot/geom to use}

\item{genesetcols}{An optional named character vector with colors for the
different gene sets
(names should correspond to levels of the groupcolumn)}

\item{newlabs}{An optional named character vector with new labels for the
different gene sets
(names should correspond to levels of the groupcolumn)}
}
\value{
A ggplot object
}
\description{
Plots the distribution of intergenic distances by side
   (upstream/downstream) and orientation (Same or Opposite Strand)
   for different sets of genes, using density or violin plot.
}
\examples{
## Obtain gene neighborhood information:
  GeneNeighbors <- getGeneNeighborhood(Genegr)

## Get a (random) set of (100) genes:
  set.seed(123)
  randGenes <- sample(names(Genegr), 100)

## Select a set of genes with a short upstream distances:
  ### Extract upstream distances for all genes:
    updist <- getDistSide(GeneNeighbors,
                          names(Genegr),
                          Side = "Upstream")
  ### Define sampling probabilities inversely proportional to the distance:
    probs <- (max(updist$Distance) - updist$Distance) /
                 sum(max(updist$Distance) - updist$Distance)
  ### Sample 100 genes using these probabilities:
    set.seed(1234)
    closeUpstream <- sample(updist$GeneName, 100, prob=probs)

## Extract all upstream/downstream distances for different gene sets:
  mydist <- dist2Neighbors(GeneNeighbors,
                           list("All Genes" = names(Genegr),
                                "Random Genes" = randGenes,
                                "Close Upstream" = closeUpstream))

## Finally, plot the distribution of distances (density plot):
  plotDistanceDistrib(mydist)
## Using violin plots and specific colors and labels
  plotDistanceDistrib(mydist,
                      type = "violin",
                      genesetcols = c("All Genes" = "grey",
                                      "Random Genes" = "lightblue",
                                      "Close Upstream" = "pink"),
                      newlabs = c("All Genes" = "ALL",
                                  "Random Genes" = "Random",
                                  "Close Upstream" = "Close"))
 ## Adding jitter points and a boxplot under the density plot
  plotDistanceDistrib(mydist, type = "jitterbox")

}
\seealso{
\code{\link[ggplot2]{ggplot2}},
         \code{\link[ggplot2]{ggplot}},
         \code{\link[ggstance]{geom_violinh}},
         \code{\link[ggstance]{geom_boxploth}},
         \code{\link[ggridges]{geom_density_ridges}}
}
\author{
Pascal GP Martin
}
