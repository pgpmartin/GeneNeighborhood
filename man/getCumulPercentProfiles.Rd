% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getCumulPercentProfiles.R
\name{getCumulPercentProfiles}
\alias{getCumulPercentProfiles}
\title{For gene sets, obtain the cumulative percentage of genes with single point annotations around their borders.}
\usage{
getCumulPercentProfiles(extMat, genesets = NULL)
}
\arguments{
\item{extMat}{A list with 4 matrices named upS, upAS, dnS and dnAS.
Typically obtained with the \code{\link{extendPointPresence}} function}

\item{genesets}{a list of gene sets (character vectors) for which cumulative percentages should be obtained}
}
\value{
a data frame with columns:
 \itemize{
   \item \code{Percent}: cumulative percentage when the distance from the gene borders increases
   \item \code{GeneSet}: Name of the gene sets. Taken from \code{names(genesets)} if not NULL
   \item \code{Position}: Integer giving the genomic position (Negative values for upstream, positive for downstream)
   \item \code{Side}: Character string indicating "Upstream" or "Downstream"
   \item \code{Strand}: Character string indicating "sense" or "antisense"
 }
}
\description{
For different sets of genes defined in \code{genesets},
             calculate the cumulative percentage of genes that have at least
             one single-point annotation when the distance from the gene borders increases.
}
\examples{
## Get the TES of all genes:
  tes <- getTES(Genegr)
## Get their (presence/absence) coverage around (+/-50bp) genes (with 3 bins/gene):
  tescov <- annotationCoverageAroundFeatures(annot = tes,
                                             features = Genegr,
                                             sidedist = 50,
                                             usePercent = TRUE,
                                             nbins = 3)
## For each gene, find the closest TES and extend its presence to subsequent positions:
  extTEScov <- extendPointPresence(tescov, sidedist=50)
## Identify genes with a TES at less than 6bp from their TES, on any strand
  require(GenomicRanges)
  Dist2TES <- mcols(distanceToNearest(tes, ignore.strand = TRUE))$distance
  CloseTES <- names(Genegr)[Dist2TES<6]
  NotCloseTES <- names(Genegr)[Dist2TES>=6] #Also get the complementary set
## Calculate the cumulative percentage as the distance increases:
  CP <- getCumulPercentProfiles(extTEScov,
                                list("All" = names(Genegr),
                                     "CloseTES" = CloseTES,
                                     "FarTES" = NotCloseTES))

}
\seealso{
\code{\link{extendPointPresence}}
}
\author{
Pascal GP Martin
}
