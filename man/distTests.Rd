% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distTests.R
\name{distTests}
\alias{distTests}
\title{Statistical tests for intergenic distance data}
\usage{
distTests(GeneSetDistances, Universe = NULL, type = c("ks", "wilcox",
  "indep", "resample"), R = 10000)
}
\arguments{
\item{GeneSetDistances}{A \code{tibble} with intergenic distances for the
different gene sets, as generated by the
\code{\link{dist2Neighbors}} function.}

\item{Universe}{Character string indicating which set should be considered
as the universe (or control set)}

\item{type}{Character vector indicating which test(s) to perform among:
"ks", "wilcox", "indep", "resample"}

\item{R}{integer giving the number of resampling to perform for the
resampling test (Default to 1e4)}
}
\value{
A tibble with at least the following columns:
\itemize{
  \item GeneSet. Name of the gene set.
  \item Orientation. Orientation of the neighbor (same or opposite strand).
  \item Side. Upstream or Downstream.
}
and additional columns among:
\itemize{
  \item KS.pvalue. p-value of Kolmogorov-Smirnof test
  \item Wilcox.pvalue. p-value of Wilcoxon rank sum test (or Mann-Whitney U test).
  \item Independ.pvalue. p-value of the independance test
  \item Resample.pvalue. p-value from the resampling test.
}
}
\description{
Statistical tests for intergenic distance data
}
\section{DETAILS}{

The following tests are possible:
\itemize{
  \item Kolmogorov-Smirnov test. See \code{\link[stats]{ks.test}}.
        Although not adapted to integer values, it gives conservative
        p-values for large enough gene sets.
  \item Wilcoxon rank sum test (or Mann-Whithney U test).
        See \code{\link[stats]{wilcox.test}}.
  \item Independence test. See \code{\link[coin]{independence_test}}
        in the \code{coin} package
  \item resample. A test based on random resampling of the universe distances.
}
}

\examples{
#' ## Obtain gene neighborhood information:
  GeneNeighbors <- getGeneNeighborhood(Genegr)
## Get a (random) set of (100) genes:
  set.seed(123)
  randGenes <- sample(names(Genegr), 100)
## Extract distances for this set of genes and for all genes :
 myGeneSets <- list("RandomGenes" = randGenes,
                    "AllGenes" = GeneNeighbors$GeneName)
 distForGeneSets <- dist2Neighbors(GeneNeighbors,
                                   myGeneSets)
## Test distances for random genes
distTests(distForGeneSets)
}
\seealso{
\code{\link[stats]{ks.test}},
         \code{\link[stats]{wilcox.test}},
         \code{\link[coin]{independence_test}}
}
