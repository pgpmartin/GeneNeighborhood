% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getAvgProfileWithCI.R
\name{getAvgProfileWithCI}
\alias{getAvgProfileWithCI}
\title{Compute the average profile and its confidence interval for a selection of features}
\usage{
getAvgProfileWithCI(FeatureProfiles, selFeatures = NULL, pos = NULL,
  conf = 0.95, type = c("mean", "freq", "avgnorm", "sum", "n"))
}
\arguments{
\item{FeatureProfiles}{Matrix (features in row, position in columns) or RleList with coverage profiles for a set of features}

\item{selFeatures}{Character or integer vector defining a selection of features from \code{FeatureProfiles}}

\item{pos}{(Optional) Integer vector with values defining the genomic positions represented in \code{FeatureProfiles}}

\item{conf}{Numeric in ]0,1] representing the confidence level used to compute the confidence interval}

\item{type}{Character string indicating the method used to aggregate values from all the \code{selFeatures}. Methods are:
\itemize{
  \item \code{"mean"} (Default). Compute the average value at each position.
  \item \code{"freq"} Compute the proportion of signal at each position. Sum of "freq" signal accross positions is 1.
  \item \code{"avgnorm"} Same as \code{"freq"} but mutiplied by the number of positions. Mean of "avgnorm" signal accross positions is 1.
  \item \code{"sum"} Compute the sum of signal at each position.
  \item \code{"n"} Compute the number of non missing observations at each genomic positions.
}}
}
\value{
a data frame with 4 columns:
  \itemize{
  \item \code{Position}: pos values
  \item \code{Profile}: values obtained by aggregating as defined by \code{type} on all \code{selFeatures}
  \item \code{Upper}: Upper bound of the confidence interval of \code{Profile}
  \item \code{Lower}: Lower bound of the confidence interval of \code{Profile}
  }
}
\description{
Compute the average profile and its confidence interval for a selection of features
}
\examples{
## Extract the profiles around (+/-50bp) the first 200 genes. We bin the genes in 3 bins only.
  top200Prof <- annotationCoverageAroundFeatures(Genegr,
                                                 features=1:200,
                                                 sidedist = 50,
                                                 usePercent = TRUE,
                                                 nbins=3)
## Assemble the metagene profiles
  metaProf <- assembleMetagene(top200Prof)
## Select a set of 50 random genes within the top200
  set.seed(123)
  randGenes <- sample(names(Genegr)[1:200], 50)
##Get the average profile for these genes
  avgProf_sense <- getAvgProfileWithCI(metaProf$Metaprofiles_Sense,
                                       selFeatures = randGenes,
                                       pos = c(-50:0, 1:3, 0:50))
  head(avgProf_sense)
## A quick look at the profile:
  plot(1:105, avgProf_sense$Profile,
       type="l", axes = FALSE,
       xlab="Position", ylab="Percent")
  lines(1:105, avgProf_sense$Upper, lty=2, col="grey")
  lines(1:105, avgProf_sense$Lower, lty=2, col="grey")
  axis(side=2)
  axis(side=1, at=c(1,51,55,105),
       labels=c("-50bp", "TSS", "TES", "+50bp"),
       las=2)

}
