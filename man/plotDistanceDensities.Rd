% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotDistanceDensities.R
\name{plotDistanceDensities}
\alias{plotDistanceDensities}
\title{plot the distribution of intergenic distances}
\usage{
plotDistanceDensities(distdf, groupcolumn = "GeneSet",
  genesetcols = NULL, newlabs = NULL)
}
\arguments{
\item{distdf}{A data frame or tibble containing distances for different sets of gene (ideally defined in a "GeneSet" column)}

\item{groupcolumn}{A character string with the name of the column containing the description of the gene sets}

\item{genesetcols}{An optional named character vector with colors for the different gene sets (names should correspond to levels of the groupcolumn)}

\item{newlabs}{An optional named character vector with new labels for the different gene sets (names should correspond to levels of the groupcolumn)}
}
\value{
A ggplot object
}
\description{
Plots the densities of intergenic distances by side (upstream/downstream) and orientation (Same or Opposite Strand) for different sets of genes.
}
\examples{
## Obtain gene neighborhood information:
  GeneNeighbors <- getGeneNeighborhood(Genegr)

## Get a (random) set of (100) genes:
  set.seed(123)
  randGenes <- sample(names(Genegr), 100)

## Extract intergenic distances and stats for these genes:
  randDist <- analyzeNeighborsDistance(GeneList = randGenes,
                                       GeneNeighborhood = GeneNeighbors)

## Extract the intergenic distances for all non-overlapping genes:
  alldist <- analyzeNeighborsDistance(GeneList = names(Genegr),
                                      GeneNeighborhood = GeneNeighbors,
                                      DistriTest = FALSE)

## Select a set of genes with a short upstream distances:
  ### get the upstream distances:
    updist <- alldist$distances$Distance[alldist$distances$Side=="Upstream"]
    names(updist) <- alldist$distances$GeneName[alldist$distances$Side=="Upstream"]
  ### Define sampling probabilities inversely proportional to the distance:
    probs <- (max(updist) - updist) / sum(max(updist) - updist)
  ### Sample 100 genes with these probabilities:
    set.seed(1234)
    lessRandGenes <- sample(names(updist), 100, prob=probs)

## Extract intergenic distances and stats for this new set of genes:
  lessRandDist <- analyzeNeighborsDistance(GeneList = lessRandGenes,
                                           GeneNeighborhood = GeneNeighbors)

## Assemble the data for all genes, random genes and "less random" genes in a single data frame:
  mydist <- rbind.data.frame(alldist$distances,
                             randDist$distances,
                             lessRandDist$distances)
  mydist$GeneSet <- rep(c("All Genes", "Random Genes", "Less Random genes"),
                        times = c(nrow(alldist$distances),
                                  nrow(randDist$distances),
                                  nrow(lessRandDist$distances)))
## Finally, plot the distribution:
  plotDistanceDensities(mydist)

}
\author{
Pascal GP Martin
}
